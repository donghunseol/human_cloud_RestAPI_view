{{> layout/header}}

<main class="box">
    <div class="box_ui bg-light" style="padding: 30px 200px;">
        <div class="ui_content d-flex justify-content-center">
            <div class="content_list" style="width: calc(100% - 300px);">
                <!-- 회원 정보 수정 화면 -->
                <div id="list_user_modify"
                     class="list_item d-flex justify-content-center flex-column w-100 bg-white rounded-3"
                     style="margin-right: 20px; padding: 20px;">
                    <div class="item_resume">
                        <span class="resume_correction h5 fw-bold">회원 정보 수정</span>
                        <div class="correction_list p-3 d-flex pt-0 border-top pt-3 mt-3">
                            <form action="/users/{{user.id}}/update" class="w-100" method="post"
                                  enctype="multipart/form-data">
                                <div class="list_name pb-3">
                                    <div>아이디</div>
                                    <input class="w-100 py-1 border border-secondary rounded-1" type="text"
                                           name="username" id="username" value="{{user.username}}">
                                </div>
                                <div class="list_name pb-3">
                                    <div>패스워드</div>
                                    <input class="w-100 py-1 border border-secondary rounded-1" type="text"
                                           name="password" id="password" value="{{user.password}}">
                                </div>
                                <div class="list_phone pb-3">
                                    <div>tel</div>
                                    <input class="w-100 py-1 border border-secondary rounded-1" type="tel"
                                           name="tel" id="tel" value="{{user.tel}}">
                                </div>
                                <div class="list_email pb-3">
                                    <div>이메일</div>
                                    <input class="w-100 py-1 border border-secondary rounded-1" type="email"
                                           name="email" id="email" value="{{user.email}}">
                                </div>
                                <div class="list_address pb-3">
                                    <div>주소</div>
                                    <input class="w-100 py-1 border border-secondary rounded-1" type="text"
                                           name="address" id="address" value="{{user.address}}">
                                </div>

<!--                                TODO: 이미지 카드 클래스 추가 ,style="width: 60%;"추가 뷰 수정필요-->
                                <div class="card" style="width: 30%;">
                                    <img class="card-img-top" id="imgPreview" src="/images/{{user.encodedData}}">
                                    <div class="card-body">
                                        <div class="input-group">
                                            <input type="file" class="form-control" name="encodedData"
                                                   value="{{user.encodedData}}" onchange="previewImage(this)">
                                        </div>
                                    </div>
                                </div>
                                <button type="submit" class="btn btn-outline-dark">회원 정보 수정 완료</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
            {{> layout/sidebar}}
        </div>
    </div>
</main>
<script>
    // HTML 문서에서 ID가 'imgPreview'인 이미지 요소를 찾아 imgPreview 변수에 할당
    const imgPreview = document.getElementById('imgPreview');

    // 사용자가 이미지 파일을 선택했을 때 실행되는 함수
    function previewImage(input) {
        // 선택된 파일을 가져오기
        const file = input.files[0];

        // FileReader 객체를 생성
        const reader = new FileReader();

        // FileReader의 onload 이벤트 핸들러를 정의
        // 파일 읽기가 완료되면 이 함수가 실행되고, 이벤트 객체 e를 매개변수로 받기
        reader.onload = function (e) {
            // 파일을 읽어들인 데이터 URL을 이미지 요소의 src 속성에 할당하여 이미지를 표시
            imgPreview.src = e.target.result;
        };

        // 선택된 파일을 Data URL로 읽기
        // 파일의 내용이 Base64로 인코딩된 문자열로 반환
        reader.readAsDataURL(file);
    }
</script>

{{> layout/footer}}